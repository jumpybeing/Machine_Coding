import java.util.*;

public class Driver {
	
	static CabDriver driver[]=new CabDriver[1001];
	static User user[]=new User[1001];
	
	public static void main(String[] args) {
		
		Scanner sc=new Scanner(System.in);
		HashMap<String,ArrayList<Integer>> map=new HashMap<>();
		
		int NumDriver=3;
		int cabids=1;
		for(int i=1;i<=NumDriver;i++) {
			System.out.println("Enter Cab details to be alloted to the driver !!");
			System.out.print("Source - ");
			String src=sc.next();
			System.out.println();
			System.out.print("Dest - ");
			String dest=sc.next();
			System.out.println();
			
			
			System.out.print("Type - ");
			Type type;
			int f=sc.nextInt();
			if(f==1) {
				type=Type.AUTO;
			}
			else if(f==2) {
				type=Type.BIKE;
			}
			else if(f==3) {
				type=Type.MINI;
			}
			else {
				System.out.println("Invalid Option!!!");
				continue;
			}
			System.out.println();
			
			
			Cab cab=new Cab(cabids,src,dest,type);
			if(!map.containsKey(src+"#"+dest))
			{
				ArrayList<Integer> a=new ArrayList<Integer>();
				a.add(i);
				map.put(src+"#"+dest,new ArrayList<>(a));
			}
			else
			{
				ArrayList<Integer> a=map.get(src+"#"+dest);
				a.add(i);
				map.put(src+"#"+dest,new ArrayList<>(a));
			}
			cabids++;
			System.out.println("Enter Driver name!!");
			String name=sc.next();
			driver[i]=new CabDriver(i,cab,name);
				
		}
		
		Implementation impl=new Implementation();
		int riders=2;
		
		for(int i=1;i<=riders;i++) {
			user[i]=impl.addUser(i);
			int driverid=sc.nextInt();
			System.out.println("Type 1 for taking offered ride or 2 for asking for a ride!!");
			int askedoroffered=sc.nextInt();
			
			if(askedoroffered==1) {
					int x=impl.offer(driverid,i,driver,user);
					
					if(x==1)
					{
						System.out.println("Do you want to take the ride offered by "+driver[driverid].name+" ?");
						System.out.println("Enter 1 for Yes and 0 for No !!");
						int input=sc.nextInt();
						if(input==1)
						{
							impl.takeride(driverid,i,user);
						}
					}
			
			}
			else {
				ArrayList<Integer> a=map.get(user[i].src+"#"+user[i].dest);
				if(a==null) {
					continue;
				}
				else
				{
					
					for(int k=0;k<a.size();k++) {
						if(driver[a.get(k)].cab.ppl==1)
						{
							driver[a.get(k)].cab.ppl--;
							impl.askforride(a.get(k),i,user);
							driver[a.get(k)].booked=true;
							break;
						}
					}
				}
				
			}

		}
		
	
		impl.printStats(user, riders);
		

	}

}


class User{
	int id;
	String name;
	int taken;
	int offered;
	String src;
	String dest;
	public User(int id,String name,String src,String dest) {
		this.id=id;
		this.name=name;
		this.taken=0;
		this.offered=0;
		this.src=src;
		this.dest=dest;
	}
}

class CabDriver{
	Cab cab;
	String name;
	int id;
	int offered;
	boolean booked;
	public CabDriver(int id,Cab cab,String name) {
		this.cab=cab;
		this.name=name;
		this.id=id;
		this.offered=0;
		this.booked=false;
	}
}

class Cab{
	int id;
	String src;
	String dest;
	Type type;
	int ppl;
	public Cab(int id,String src,String dest,Type type) {
		this.id=id;
		this.src=src;
		this.dest=dest;
		this.type=type;
		this.ppl=4;
	}
}

enum Type{
	BIKE,AUTO,MINI;
}
